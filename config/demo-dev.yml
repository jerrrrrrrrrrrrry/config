spring:
  redis:
    database: 15
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        max-active: 100
        max-idle: 10
        max-wait: 100000
    timeout: 5000
  jpa:
    database: mysql
    show-sql: true
  jta:
    atomikos:
      properties:
        log-base-dir: ../logs
  #    transaction-manager-id: txManager
  aop:
    proxy-target-class: true
    auto: true
  datasource:
    druid:
      primary:
        enable: true
        #   数据源基本配置
        username: hand
        password: hand-dev
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://10.120.11.10:3306/xdwl?useSSL=false #url
        #        type: com.alibaba.druid.pool.xa.DruidXADataSource
        #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        initialSize: 5
        minIdle: 5
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 30000
        minEvictableIdleTimeMillis: 60000
        removeAbandonedTimeout: 180
        removeAbandoned: true
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        useGlobalDataSourceStat: true
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      secondary:
        enable: true
        #   数据源基本配置
        username: hand
        password: hand-dev
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://10.120.11.16:3306/xdwl?useSSL=false #url
        #        type: com.alibaba.druid.pool.xa.DruidXADataSource
        #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        initialSize: 5
        minIdle: 5
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 30000
        minEvictableIdleTimeMillis: 60000
        removeAbandonedTimeout: 180
        removeAbandoned: true
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        useGlobalDataSourceStat: true
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      thirdary:
        enable: true
        #   数据源基本配置
        username: sa
        password: "@hongcaoLu448"
        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
        url: jdbc:sqlserver://192.168.10.23:1433;SelectMethod=cursor;DatabaseName=hap_dev
        #        type: com.alibaba.druid.pool.xa.DruidXADataSource
        #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        initialSize: 5
        minIdle: 5
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 30000
        minEvictableIdleTimeMillis: 60000
      #   Druid数据源配置
      filters: stat,wall,slf4j
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 30000
      minEvictableIdleTimeMillis: 60000
      removeAbandonedTimeout: 180
      removeAbandoned: true
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      statViewServlet:
        #是否启用 StatViewServlet 默认值 true
        enabled: true
        # 需要拦截的 url
        urlPattern: /druid/*
        # 允许清空统计数据
        resetEnable: true
        loginUsername: admin
        loginPassword: admin
  thymeleaf:
    cache: false
logging:
  config: classpath:logback.xml
  file:
    path: D:/logback
  level:
    #     root日志以WARN级别输出
    root: INFO
#     此包下所有class以DEBUG级别输出
#    com.xdwl.springbootdemo: DEBUG
# 整合MyBatis
mybatis:
  # 配置别名
  type-aliases-package: com.xdwl.springbootdemo
  # 绑定Mapper配置文件
  # 注意：这里的 classpath代指：resources目录
  mapper-locations: classpath:mapper/*/*.xml
swagger:
  print-init: true
  enabled: true
  basic:
    enable: true
    username: admin
    password: admin